(dp0
Vmembers
p1
(dp2
Vselect
p3
(dp4
Vkind
p5
Vfunction
p6
sVvalue
p7
(dp8
Voverloads
p9
((dp10
Vret_type
p11
(V__builtin__
p12
Vtuple
p13
tp14
sVargs
p15
(lp16
(dp17
Vtype
p18
(g12
Vobject
p19
tp20
sVname
p21
Viwtd
p22
sa(dp23
g18
(g12
g19
tp24
sg21
Vowtd
p25
sa(dp26
g18
(g12
g19
tp27
sg21
Vewtd
p28
sa(dp29
g18
(g12
g19
tp30
sg21
Vtimeout
p31
sVdefault_value
p32
VNone
p33
sastp34
sVdoc
p35
Vselect(iwtd, owtd, ewtd[, timeout]) -> readlist, writelist, errlist\u000a\u000aBlock until sockets are available for reading or writing, until an error\u000aoccurs, or until a the timeout expires. The first three parameters are\u000asequences of socket objects (opened using the socket module). The last is a\u000atimeout value, given in seconds as a float. If timeout is omitted, select()\u000ablocks until at least one socket is ready. A timeout of zero never blocks, but\u000acan be used for polling.\u000a\u000aThe return value is a tuple of lists of sockets that are ready (subsets of\u000aiwtd, owtd, and ewtd). If the timeout occurs before any sockets are ready, a\u000atuple of three empty lists is returned.\u000a\u000aNote that select() on IronPython works only with sockets; it will not work with\u000afiles or other objects.
p36
sssV__doc__
p37
(dp38
g5
Vdata
p39
sg7
(dp40
g18
(g12
Vstr
p41
tp42
sssV__package__
p43
(dp44
g5
g39
sg7
(dp45
g18
(g12
VNoneType
p46
tp47
sssV__name__
p48
(dp49
g5
g39
sg7
(dp50
g18
(g12
g41
tp51
sssVerror
p52
(dp53
g5
g18
sg7
(dp54
Vmembers
p55
(dp56
V__module__
p57
(dp58
g5
g39
sg7
(dp59
g18
(g12
g41
tp60
sssV__weakref__
p61
(dp62
g5
g39
sg7
(dp63
g18
(g12
Vgetset_descriptor
p64
tp65
sssV__doc__
p66
(dp67
g5
g39
sg7
(dp68
g18
(g12
g41
tp69
ssssVmro
p70
(lp71
(Vselect
p72
g52
tp73
a(Vexceptions
p74
VException
p75
tp76
a(g74
VBaseException
p77
tp78
a(g12
g19
tp79
asg35
V
p80
sVbases
p81
(lp82
(g74
g75
tp83
assssVdoc
p84
VProvides support for asynchronous socket operations.
p85
s.
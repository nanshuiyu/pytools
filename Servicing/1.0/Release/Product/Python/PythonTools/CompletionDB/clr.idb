(dp0
Vmembers
p1
(dp2
VGetCurrentRuntime
p3
(dp4
Vkind
p5
Vfunction
p6
sVvalue
p7
(dp8
Voverloads
p9
(tsVdoc
p10
VGetCurrentRuntime() -> ScriptDomainManager\u000a
p11
sssVDeserialize
p12
(dp13
g5
g6
sg7
(dp14
g9
((dp15
Vret_type
p16
(V__builtin__
p17
Vobject
p18
tp19
sVargs
p20
(lp21
(dp22
Vtype
p23
(g17
Vstr
p24
tp25
sVname
p26
VserializationFormat
p27
sa(dp28
g23
(g17
g24
tp29
sg26
Vdata
p30
sastp31
sg10
VDeserialize(serializationFormat: str, data: str) -> object\u000a
p32
sssVLoadAssemblyFromFile
p33
(dp34
g5
g6
sg7
(dp35
g9
(tsg10
VLoads an assembly from the specified filename and returns the assembly\u000aobject.  Namespaces or types in the assembly can be accessed directly from \u000athe assembly object.
p36
sssVReferences
p37
(dp38
g5
Vdata
p39
sg7
(dp40
g23
(Vclr
p41
VReferencesList
p42
tp43
sssVSetCommandDispatcher
p44
(dp45
g5
g6
sg7
(dp46
g9
(tsg10
VSetCommandDispatcher(dispatcher: Action[Action]) -> Action[Action]\u000a
p47
sssg42
(dp48
g5
g23
sg7
(dp49
Vmembers
p50
(dp51
V__doc__
p52
(dp53
g5
g39
sg7
(dp54
g23
(g17
VDocumentationDescriptor
p55
tp56
sssV__getitem__
p57
(dp58
g5
Vmethod
p59
sg7
(dp60
g9
(tsg10
Vx.__getitem__(y) <==> x[y]
p61
sssV__repr__
p62
(dp63
g5
g59
sg7
(dp64
g9
(tsg10
V__repr__(self: ReferencesList) -> str\u000a
p65
sssV__add__
p66
(dp67
g5
g59
sg7
(dp68
g9
(tsg10
Vx.__add__(y) <==> x+yx.__add__(y) <==> x+y
p69
sssV__iter__
p70
(dp71
g5
g59
sg7
(dp72
g9
(tsg10
V__iter__(self: IEnumerable) -> object\u000a
p73
sssVAdd
p74
(dp75
g5
g59
sg7
(dp76
g9
(tsg10
VAdd(self: ReferencesList, other: Assembly)
p77
sssV__setitem__
p78
(dp79
g5
g59
sg7
(dp80
g9
(tsg10
Vx.__setitem__(i, y) <==> x[i]=
p81
ssssVmro
p82
(lp83
(g41
g42
tp84
a(g17
VList[Assembly]
p85
tp86
a(g17
g18
tp87
a(g17
VIList[Assembly]
p88
tp89
a(g17
VICollection
p90
tp91
a(g17
VICodeFormattable
p92
tp93
asg10
VReferencesList()\u000a
p94
sVbases
p95
(lp96
(g17
g85
tp97
asssVAddReferenceToTypeLibrary
p98
(dp99
g5
g6
sg7
(dp100
g9
((dp101
g16
(g17
VNoneType
p102
tp103
sg20
(lp104
(dp105
g23
(g17
g18
tp106
sg26
Vrcw
p107
sastp108
sg10
VAddReferenceToTypeLibrary(rcw: object)AddReferenceToTypeLibrary(typeLibGuid: Guid)
p109
sssVLoadAssemblyByName
p110
(dp111
g5
g6
sg7
(dp112
g9
(tsg10
VLoads an assembly from the specified assembly name and returns the assembly\u000aobject.  Namespaces or types in the assembly can be accessed directly from \u000athe assembly object.
p113
sssVLoadAssemblyByPartialName
p114
(dp115
g5
g6
sg7
(dp116
g9
(tsg10
VLoads an assembly from the specified partial assembly name and returns the \u000aassembly object.  Namespaces or types in the assembly can be accessed directly \u000afrom the assembly object.
p117
sssVReference
p118
(dp119
g5
g23
sg7
(dp120
g50
(dp121
V__new__
p122
(dp123
g5
g6
sg7
(dp124
g9
(tsg10
V__new__(cls: type)\u000a__new__(cls: type, value: T)\u000a
p125
sssVValue
p126
(dp127
g5
g39
sg7
(dp128
g23
(g17
Vfield#
p129
tp130
sssV__repr__
p131
(dp132
g5
g59
sg7
(dp133
g9
((dp134
g16
(g17
g24
tp135
sg20
(lp136
(dp137
g23
(g17
g18
tp138
sg26
Vself
p139
sastp140
sg10
V__repr__(self: object) -> str\u000a
p141
sssg52
(dp142
g5
g39
sg7
(dp143
g23
(g17
g55
tp144
ssssg82
(lp145
(g17
VStrongBox[T]
p146
tp147
a(g17
g18
tp148
a(g17
VIStrongBox
p149
tp150
asg10
VStrongBox[T]()\u000aStrongBox[T](value: T)\u000a
p151
sg95
(lp152
(g17
g18
tp153
asssVStrongBox
p154
(dp155
g5
g23
sg7
(dp156
g50
(dp157
g122
(dp158
g5
g6
sg7
(dp159
g9
(tsg10
V__new__(cls: type)\u000a__new__(cls: type, value: T)\u000a
p160
sssg126
(dp161
g5
g39
sg7
(dp162
g23
(g17
g129
tp163
sssg131
(dp164
g5
g59
sg7
(dp165
g9
((dp166
g16
(g17
g24
tp167
sg20
(lp168
(dp169
g23
(g17
g18
tp170
sg26
g139
sastp171
sg10
V__repr__(self: object) -> str\u000a
p172
sssg52
(dp173
g5
g39
sg7
(dp174
g23
(g17
g55
tp175
ssssg82
(lp176
(g17
g146
tp177
a(g17
g18
tp178
a(g17
g149
tp179
asg10
VStrongBox[T]()\u000aStrongBox[T](value: T)\u000a
p180
sg95
(lp181
(g17
g18
tp182
asssVDir
p183
(dp184
g5
g6
sg7
(dp185
g9
((dp186
g16
(g17
Vlist
p187
tp188
sg20
(lp189
(dp190
g23
(g17
g18
tp191
sg26
Vo
p192
sastp193
sg10
VDir(o: object) -> list\u000a
p194
sssVCompileModules
p195
(dp196
g5
g6
sg7
(dp197
g9
(tsg10
VCompileModules(assemblyName: str, **kwArgs: IDictionary[str, object], *filenames: Array[str])
p198
sssVRuntimeReturnChecker
p199
(dp200
g5
g23
sg7
(dp201
g50
(dp202
g122
(dp203
g5
g6
sg7
(dp204
g9
(tsg10
V__new__(cls: type, function: object, expectedReturn: object)\u000a__new__(cls: type, instance: object, function: object, expectedReturn: object)\u000a
p205
sssVGetAttribute
p206
(dp207
g5
g59
sg7
(dp208
g9
(tsg10
VGetAttribute(self: RuntimeReturnChecker, instance: object, owner: object) -> object\u000a
p209
sssV__call__
p210
(dp211
g5
g59
sg7
(dp212
g9
(tsg10
Vx.__call__(...) <==> x(...)x.__call__(...) <==> x(...)
p213
sssg52
(dp214
g5
g39
sg7
(dp215
g23
(g17
g55
tp216
ssssg82
(lp217
(g41
g199
tp218
a(g17
VPythonTypeSlot
p219
tp220
a(g17
g18
tp221
asg10
VRuntimeReturnChecker(function: object, expectedReturn: object)\u000aRuntimeReturnChecker(instance: object, function: object, expectedReturn: object)\u000a
p222
sg95
(lp223
(g17
g219
tp224
asssVaccepts
p225
(dp226
g5
g6
sg7
(dp227
g9
((dp228
g16
(g17
g18
tp229
sg20
(lp230
(dp231
Varg_format
p232
V*
p233
sg23
(g17
Vtuple
p234
tp235
sg26
Vtypes
p236
sastp237
sg10
Vaccepts(*types: Array[object]) -> object\u000a
p238
sssVreturns
p239
(dp240
g5
g6
sg7
(dp241
g9
((dp242
g16
(g17
g18
tp243
sg20
(lp244
(dp245
g23
(g17
g18
tp246
sg26
Vtype
p247
sastp248
sg10
Vreturns(type: object) -> object\u000a
p249
sssVAddReferenceByPartialName
p250
(dp251
g5
g6
sg7
(dp252
g9
((dp253
g16
(g17
g102
tp254
sg20
(lp255
(dp256
g232
g233
sg23
(g17
g234
tp257
sg26
Vnames
p258
sastp259
sg10
VAdds a reference to a .NET assembly.  Parameters are a partial assembly name. \u000aAfter the load the assemblies namespaces and top-level types will be available via \u000aimport Namespace.
p260
sssVArgChecker
p261
(dp262
g5
g23
sg7
(dp263
g50
(dp264
g122
(dp265
g5
g6
sg7
(dp266
g9
(tsg10
V__new__(cls: type, prms: Array[object])\u000a
p267
sssg210
(dp268
g5
g59
sg7
(dp269
g9
(tsg10
Vx.__call__(...) <==> x(...)
p270
sssg131
(dp271
g5
g59
sg7
(dp272
g9
((dp273
g16
(g17
g24
tp274
sg20
(lp275
(dp276
g23
(g17
g18
tp277
sg26
g139
sastp278
sg10
V__repr__(self: object) -> str\u000a
p279
sssg52
(dp280
g5
g39
sg7
(dp281
g23
(g17
g55
tp282
ssssg82
(lp283
(g41
g261
tp284
a(g17
g18
tp285
asg10
VArgChecker(prms: Array[object])\u000a
p286
sg95
(lp287
(g17
g18
tp288
asssVRuntimeArgChecker
p289
(dp290
g5
g23
sg7
(dp291
g50
(dp292
g122
(dp293
g5
g6
sg7
(dp294
g9
(tsg10
V__new__(cls: type, function: object, expectedArgs: Array[object])\u000a__new__(cls: type, instance: object, function: object, expectedArgs: Array[object])\u000a
p295
sssg210
(dp296
g5
g59
sg7
(dp297
g9
(tsg10
Vx.__call__(...) <==> x(...)x.__call__(...) <==> x(...)
p298
sssg52
(dp299
g5
g39
sg7
(dp300
g23
(g17
g55
tp301
ssssg82
(lp302
(g41
g289
tp303
a(g17
g219
tp304
a(g17
g18
tp305
asg10
VRuntimeArgChecker(function: object, expectedArgs: Array[object])\u000aRuntimeArgChecker(instance: object, function: object, expectedArgs: Array[object])\u000a
p306
sg95
(lp307
(g17
g219
tp308
asssVSelf
p309
(dp310
g5
g6
sg7
(dp311
g9
((dp312
g16
(g17
g18
tp313
sg20
(lp314
stp315
sg10
VSelf() -> object\u000a
p316
sssVSerialize
p317
(dp318
g5
g6
sg7
(dp319
g9
((dp320
g16
(g17
g234
tp321
sg20
(lp322
(dp323
g23
(g17
g18
tp324
sg26
Vself
p325
sastp326
sg10
VSerialize(self: object) -> tuple\u000a
p327
sssVUse
p328
(dp329
g5
g6
sg7
(dp330
g9
((dp331
g16
(g17
g18
tp332
sg20
(lp333
(dp334
g23
(g17
g24
tp335
sg26
Vname
p336
sas(dp337
g16
(g17
g18
tp338
sg20
(lp339
(dp340
g23
(g17
g24
tp341
sg26
Vpath
p342
sa(dp343
g23
(g17
g24
tp344
sg26
Vlanguage
p345
sastp346
sg10
VUse(name: str) -> object\u000aUse(path: str, language: str) -> object\u000a
p347
sssVImportExtensions
p348
(dp349
g5
g6
sg7
(dp350
g9
((dp351
g16
(g17
g102
tp352
sg20
(lp353
(dp354
g23
(g17
Vtype
p355
tp356
sg26
Vtype
p357
sas(dp358
g16
(g17
g102
tp359
sg20
(lp360
(dp361
g23
(g17
Vnamespace#
p362
tp363
sg26
Vnamespace
p364
sastp365
sg10
VImportExtensions(type: type)ImportExtensions(namespace: namespace#)
p366
sssVEnableProfiler
p367
(dp368
g5
g6
sg7
(dp369
g9
((dp370
g16
(g17
g102
tp371
sg20
(lp372
(dp373
g23
(g17
Vbool
p374
tp375
sg26
Venable
p376
sastp377
sg10
VEnableProfiler(enable: bool)
p378
sssV__package__
p379
(dp380
g5
g39
sg7
(dp381
g23
(g17
g102
tp382
sssVGetSubclassedTypes
p383
(dp384
g5
g6
sg7
(dp385
g9
((dp386
g16
(g17
g234
tp387
sg20
(lp388
stp389
sg10
VGetSubclassedTypes() -> tuple\u000a
p390
sssVAddReference
p391
(dp392
g5
g6
sg7
(dp393
g9
((dp394
g16
(g17
g102
tp395
sg20
(lp396
(dp397
g232
g233
sg23
(g17
g234
tp398
sg26
Vreferences
p399
sastp400
sg10
VAdds a reference to a .NET assembly.  Parameters can be an already loaded\u000aAssembly object, a full assembly name, or a partial assembly name. After the\u000aload the assemblies namespaces and top-level types will be available via \u000aimport Namespace.
p401
sssVLoadTypeLibrary
p402
(dp403
g5
g6
sg7
(dp404
g9
(tsg10
VLoadTypeLibrary(rcw: object) -> ComTypeLibInfo\u000aLoadTypeLibrary(typeLibGuid: Guid) -> ComTypeLibInfo\u000a
p405
sssVGetProfilerData
p406
(dp407
g5
g6
sg7
(dp408
g9
((dp409
g16
(g17
g234
tp410
sg20
(lp411
(dp412
g23
(g17
g374
tp413
sg26
VincludeUnused
p414
sVdefault_value
p415
VFalse
p416
sastp417
sg10
VGetProfilerData(includeUnused: bool) -> tuple\u000a
p418
sssVCompileSubclassTypes
p419
(dp420
g5
g6
sg7
(dp421
g9
((dp422
g16
(g17
g102
tp423
sg20
(lp424
(dp425
g23
(g17
g24
tp426
sg26
VassemblyName
p427
sa(dp428
g232
g233
sg23
(g17
g234
tp429
sg26
VnewTypes
p430
sastp431
sg10
VCompileSubclassTypes(assemblyName: str, *newTypes: Array[object])
p432
sssVDirClr
p433
(dp434
g5
g6
sg7
(dp435
g9
((dp436
g16
(g17
g187
tp437
sg20
(lp438
(dp439
g23
(g17
g18
tp440
sg26
Vo
p441
sastp442
sg10
VDirClr(o: object) -> list\u000a
p443
sssVConvert
p444
(dp445
g5
g6
sg7
(dp446
g9
(tsg10
VConvert(o: object, toType: Type) -> object\u000a
p447
sssVLoadAssemblyFromFileWithPath
p448
(dp449
g5
g6
sg7
(dp450
g9
(tsg10
VAdds a reference to a .NET assembly.  Parameters are a full path to an. \u000aassembly on disk. After the load the assemblies namespaces and top-level types \u000awill be available via import Namespace.
p451
sssVClearProfilerData
p452
(dp453
g5
g6
sg7
(dp454
g9
((dp455
g16
(g17
g102
tp456
sg20
(lp457
stp458
sg10
VClearProfilerData()
p459
sssVReturnChecker
p460
(dp461
g5
g23
sg7
(dp462
g50
(dp463
g52
(dp464
g5
g39
sg7
(dp465
g23
(g17
g55
tp466
sssg210
(dp467
g5
g59
sg7
(dp468
g9
(tsg10
Vx.__call__(...) <==> x(...)
p469
sssg131
(dp470
g5
g59
sg7
(dp471
g9
((dp472
g16
(g17
g24
tp473
sg20
(lp474
(dp475
g23
(g17
g18
tp476
sg26
g139
sastp477
sg10
V__repr__(self: object) -> str\u000a
p478
sssg122
(dp479
g5
g6
sg7
(dp480
g9
(tsg10
V__new__(cls: type, returnType: object)\u000a
p481
sssVretType
p482
(dp483
g5
g39
sg7
(dp484
g23
(g17
g129
tp485
ssssg82
(lp486
(g41
g460
tp487
a(g17
g18
tp488
asg10
VReturnChecker(returnType: object)\u000a
p489
sg95
(lp490
(g17
g18
tp491
asssVGetClrType
p492
(dp493
g5
g6
sg7
(dp494
g9
(tsg10
VGetClrType(type: Type) -> Type\u000a
p495
sssV__name__
p496
(dp497
g5
g39
sg7
(dp498
g23
(g17
g24
tp499
sssVAddReferenceByName
p500
(dp501
g5
g6
sg7
(dp502
g9
((dp503
g16
(g17
g102
tp504
sg20
(lp505
(dp506
g232
g233
sg23
(g17
g234
tp507
sg26
Vnames
p508
sastp509
sg10
VAdds a reference to a .NET assembly.  Parameters are an assembly name. \u000aAfter the load the assemblies namespaces and top-level types will be available via \u000aimport Namespace.
p510
sssVAddReferenceToFileAndPath
p511
(dp512
g5
g6
sg7
(dp513
g9
((dp514
g16
(g17
g102
tp515
sg20
(lp516
(dp517
g232
g233
sg23
(g17
g234
tp518
sg26
Vfiles
p519
sastp520
sg10
VAdds a reference to a .NET assembly.  One or more assembly names can\u000abe provided which are fully qualified names to the file on disk.  The \u000adirectory is added to sys.path and AddReferenceToFile is then called. After the \u000aload the assemblies namespaces and top-level types will be available via \u000aimport Namespace.
p521
sssVGetDynamicType
p522
(dp523
g5
g6
sg7
(dp524
g9
(tsg10
VGetDynamicType(t: Type) -> type\u000a
p525
sssVAddReferenceToFile
p526
(dp527
g5
g6
sg7
(dp528
g9
((dp529
g16
(g17
g102
tp530
sg20
(lp531
(dp532
g232
g233
sg23
(g17
g234
tp533
sg26
Vfiles
p534
sastp535
sg10
VAdds a reference to a .NET assembly.  One or more assembly names can\u000abe provided.  The assembly is searched for in the directories specified in \u000asys.path and dependencies will be loaded from sys.path as well.  The assembly \u000aname should be the filename on disk without a directory specifier and \u000aoptionally including the .EXE or .DLL extension. After the load the assemblies \u000anamespaces and top-level types will be available via import Namespace.
p536
sssVGetPythonType
p537
(dp538
g5
g6
sg7
(dp539
g9
(tsg10
VGetPythonType(t: Type) -> type\u000a
p540
ssssVdoc
p541
Vmodule()\u000a
p542
s.
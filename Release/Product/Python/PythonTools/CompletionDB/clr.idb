(dp0
Vmembers
p1
(dp2
VGetCurrentRuntime
p3
(dp4
Vkind
p5
Vfunction
p6
sVvalue
p7
(dp8
Voverloads
p9
(tsVdoc
p10
VGetCurrentRuntime() -> ScriptDomainManager\u000a
p11
sssVDeserialize
p12
(dp13
g5
g6
sg7
(dp14
g9
((dp15
Vret_type
p16
(V__builtin__
p17
Vobject
p18
tp19
sVargs
p20
(lp21
(dp22
Vtype
p23
(g17
Vstr
p24
tp25
sVname
p26
VserializationFormat
p27
sa(dp28
g23
(g17
g24
tp29
sg26
Vdata
p30
sastp31
sg10
VDeserialize(serializationFormat: str, data: str) -> object\u000a
p32
sssVLoadAssemblyFromFile
p33
(dp34
g5
g6
sg7
(dp35
g9
(tsg10
VLoads an assembly from the specified filename and returns the assembly\u000aobject.  Namespaces or types in the assembly can be accessed directly from \u000athe assembly object.
p36
sssVReferences
p37
(dp38
g5
Vdata
p39
sg7
(dp40
g23
(Vclr
p41
VReferencesList
p42
tp43
sssVSetCommandDispatcher
p44
(dp45
g5
g6
sg7
(dp46
g9
(tsg10
VSetCommandDispatcher(dispatcher: Action[Action]) -> Action[Action]\u000a
p47
sssg42
(dp48
g5
g23
sg7
(dp49
Vmembers
p50
(dp51
V__doc__
p52
(dp53
g5
g39
sg7
(dp54
g23
(g17
VDocumentationDescriptor
p55
tp56
sssV__getitem__
p57
(dp58
g5
Vmethod
p59
sg7
(dp60
g9
(tsg10
Vx.__getitem__(y) <==> x[y]
p61
sssV__repr__
p62
(dp63
g5
g59
sg7
(dp64
g9
(tsg10
V__repr__(self: ReferencesList) -> str\u000a
p65
sssV__add__
p66
(dp67
g5
g59
sg7
(dp68
g9
(tsg10
Vx.__add__(y) <==> x+yx.__add__(y) <==> x+y
p69
sssV__iter__
p70
(dp71
g5
g59
sg7
(dp72
g9
(tsg10
V__iter__(self: IEnumerable) -> object\u000a
p73
sssVAdd
p74
(dp75
g5
g59
sg7
(dp76
g9
(tsg10
VAdd(self: ReferencesList, other: Assembly)
p77
sssV__setitem__
p78
(dp79
g5
g59
sg7
(dp80
g9
(tsg10
Vx.__setitem__(i, y) <==> x[i]=
p81
ssssVmro
p82
(lp83
(g41
g42
tp84
a(g17
VList[Assembly]
p85
tp86
a(g17
g18
tp87
a(g17
VIList[Assembly]
p88
tp89
a(g17
VICollection
p90
tp91
a(g17
VICodeFormattable
p92
tp93
asg10
VReferencesList()\u000a
p94
sVbases
p95
(lp96
(g17
g85
tp97
asssVAddReferenceToTypeLibrary
p98
(dp99
g5
g6
sg7
(dp100
g9
((dp101
g16
(g17
VNoneType
p102
tp103
sg20
(lp104
(dp105
g23
(g17
g18
tp106
sg26
Vrcw
p107
sastp108
sg10
VAddReferenceToTypeLibrary(rcw: object)AddReferenceToTypeLibrary(typeLibGuid: Guid)
p109
sssVLoadAssemblyByName
p110
(dp111
g5
g6
sg7
(dp112
g9
(tsg10
VLoads an assembly from the specified assembly name and returns the assembly\u000aobject.  Namespaces or types in the assembly can be accessed directly from \u000athe assembly object.
p113
sssVLoadAssemblyByPartialName
p114
(dp115
g5
g6
sg7
(dp116
g9
(tsg10
VLoads an assembly from the specified partial assembly name and returns the \u000aassembly object.  Namespaces or types in the assembly can be accessed directly \u000afrom the assembly object.
p117
sssVReference
p118
(dp119
g5
g23
sg7
(dp120
g50
(dp121
V__new__
p122
(dp123
g5
g6
sg7
(dp124
g9
((dp125
g16
(g17
g18
tp126
sg20
(lp127
(dp128
g23
(g17
Vtype
p129
tp130
sg26
Vtypeø
p131
sa(dp132
Varg_format
p133
V*
p134
sg23
(g17
Vtuple
p135
tp136
sg26
Vargsø
p137
sas(dp138
g16
(g17
g18
tp139
sg20
(lp140
(dp141
g23
(g17
g129
tp142
sg26
Vtypeø
p143
sa(dp144
g133
V**
p145
sg23
(g17
Vdict
p146
tp147
sg26
Vkwargsø
p148
sa(dp149
g133
g134
sg23
(g17
g135
tp150
sg26
Vargsø
p151
sas(dp152
g16
(g17
g18
tp153
sg20
(lp154
(dp155
g23
(g17
g129
tp156
sg26
Vtypeø
p157
sa(dp158
g133
g145
sg23
(g17
g146
tp159
sg26
Vkwargsø
p160
sastp161
sg10
V__new__(cls: type)\u000a__new__(cls: type, value: T)\u000a
p162
sssVValue
p163
(dp164
g5
g39
sg7
(dp165
g23
(g17
Vfield#
p166
tp167
sssV__repr__
p168
(dp169
g5
g59
sg7
(dp170
g9
((dp171
g16
(g17
g24
tp172
sg20
(lp173
(dp174
g23
(g17
g18
tp175
sg26
Vself
p176
sastp177
sg10
V__repr__(self: object) -> str\u000a
p178
sssg52
(dp179
g5
g39
sg7
(dp180
g23
(g17
g55
tp181
ssssg82
(lp182
(g17
VStrongBox[T]
p183
tp184
a(g17
g18
tp185
a(g17
VIStrongBox
p186
tp187
asg10
VStrongBox[T]()\u000aStrongBox[T](value: T)\u000a
p188
sg95
(lp189
(g17
g18
tp190
asssVStrongBox
p191
(dp192
g5
g23
sg7
(dp193
g50
(dp194
g122
(dp195
g5
g6
sg7
(dp196
g9
((dp197
g16
(g17
g18
tp198
sg20
(lp199
(dp200
g23
(g17
g129
tp201
sg26
g131
sa(dp202
g133
g134
sg23
(g17
g135
tp203
sg26
g137
sas(dp204
g16
(g17
g18
tp205
sg20
(lp206
(dp207
g23
(g17
g129
tp208
sg26
g143
sa(dp209
g133
g145
sg23
(g17
g146
tp210
sg26
g148
sa(dp211
g133
g134
sg23
(g17
g135
tp212
sg26
g151
sas(dp213
g16
(g17
g18
tp214
sg20
(lp215
(dp216
g23
(g17
g129
tp217
sg26
g157
sa(dp218
g133
g145
sg23
(g17
g146
tp219
sg26
g160
sastp220
sg10
V__new__(cls: type)\u000a__new__(cls: type, value: T)\u000a
p221
sssg163
(dp222
g5
g39
sg7
(dp223
g23
(g17
g166
tp224
sssg168
(dp225
g5
g59
sg7
(dp226
g9
((dp227
g16
(g17
g24
tp228
sg20
(lp229
(dp230
g23
(g17
g18
tp231
sg26
g176
sastp232
sg10
V__repr__(self: object) -> str\u000a
p233
sssg52
(dp234
g5
g39
sg7
(dp235
g23
(g17
g55
tp236
ssssg82
(lp237
(g17
g183
tp238
a(g17
g18
tp239
a(g17
g186
tp240
asg10
VStrongBox[T]()\u000aStrongBox[T](value: T)\u000a
p241
sg95
(lp242
(g17
g18
tp243
asssVDir
p244
(dp245
g5
g6
sg7
(dp246
g9
((dp247
g16
(g17
Vlist
p248
tp249
sg20
(lp250
(dp251
g23
(g17
g18
tp252
sg26
Vo
p253
sastp254
sg10
VDir(o: object) -> list\u000a
p255
sssVCompileModules
p256
(dp257
g5
g6
sg7
(dp258
g9
(tsg10
VCompileModules(assemblyName: str, **kwArgs: IDictionary[str, object], *filenames: Array[str])
p259
sssVRuntimeReturnChecker
p260
(dp261
g5
g23
sg7
(dp262
g50
(dp263
g122
(dp264
g5
g6
sg7
(dp265
g9
((dp266
g16
(g17
g18
tp267
sg20
(lp268
(dp269
g23
(g17
g129
tp270
sg26
g131
sa(dp271
g133
g134
sg23
(g17
g135
tp272
sg26
g137
sas(dp273
g16
(g17
g18
tp274
sg20
(lp275
(dp276
g23
(g17
g129
tp277
sg26
g143
sa(dp278
g133
g145
sg23
(g17
g146
tp279
sg26
g148
sa(dp280
g133
g134
sg23
(g17
g135
tp281
sg26
g151
sas(dp282
g16
(g17
g18
tp283
sg20
(lp284
(dp285
g23
(g17
g129
tp286
sg26
g157
sa(dp287
g133
g145
sg23
(g17
g146
tp288
sg26
g160
sastp289
sg10
V__new__(cls: type, function: object, expectedReturn: object)\u000a__new__(cls: type, instance: object, function: object, expectedReturn: object)\u000a
p290
sssVGetAttribute
p291
(dp292
g5
g59
sg7
(dp293
g9
(tsg10
VGetAttribute(self: RuntimeReturnChecker, instance: object, owner: object) -> object\u000a
p294
sssV__call__
p295
(dp296
g5
g59
sg7
(dp297
g9
(tsg10
Vx.__call__(...) <==> x(...)x.__call__(...) <==> x(...)
p298
sssg52
(dp299
g5
g39
sg7
(dp300
g23
(g17
g55
tp301
ssssg82
(lp302
(g41
g260
tp303
a(g17
VPythonTypeSlot
p304
tp305
a(g17
g18
tp306
asg10
VRuntimeReturnChecker(function: object, expectedReturn: object)\u000aRuntimeReturnChecker(instance: object, function: object, expectedReturn: object)\u000a
p307
sg95
(lp308
(g17
g304
tp309
asssVaccepts
p310
(dp311
g5
g6
sg7
(dp312
g9
((dp313
g16
(g17
g18
tp314
sg20
(lp315
(dp316
g133
g134
sg23
(g17
g135
tp317
sg26
Vtypes
p318
sastp319
sg10
Vaccepts(*types: Array[object]) -> object\u000a
p320
sssVreturns
p321
(dp322
g5
g6
sg7
(dp323
g9
((dp324
g16
(g17
g18
tp325
sg20
(lp326
(dp327
g23
(g17
g18
tp328
sg26
Vtype
p329
sastp330
sg10
Vreturns(type: object) -> object\u000a
p331
sssVAddReferenceByPartialName
p332
(dp333
g5
g6
sg7
(dp334
g9
((dp335
g16
(g17
g102
tp336
sg20
(lp337
(dp338
g133
g134
sg23
(g17
g135
tp339
sg26
Vnames
p340
sastp341
sg10
VAdds a reference to a .NET assembly.  Parameters are a partial assembly name. \u000aAfter the load the assemblies namespaces and top-level types will be available via \u000aimport Namespace.
p342
sssVArgChecker
p343
(dp344
g5
g23
sg7
(dp345
g50
(dp346
g122
(dp347
g5
g6
sg7
(dp348
g9
((dp349
g16
(g17
g18
tp350
sg20
(lp351
(dp352
g23
(g17
g129
tp353
sg26
g131
sa(dp354
g133
g134
sg23
(g17
g135
tp355
sg26
g137
sas(dp356
g16
(g17
g18
tp357
sg20
(lp358
(dp359
g23
(g17
g129
tp360
sg26
g143
sa(dp361
g133
g145
sg23
(g17
g146
tp362
sg26
g148
sa(dp363
g133
g134
sg23
(g17
g135
tp364
sg26
g151
sas(dp365
g16
(g17
g18
tp366
sg20
(lp367
(dp368
g23
(g17
g129
tp369
sg26
g157
sa(dp370
g133
g145
sg23
(g17
g146
tp371
sg26
g160
sastp372
sg10
V__new__(cls: type, prms: Array[object])\u000a
p373
sssg295
(dp374
g5
g59
sg7
(dp375
g9
(tsg10
Vx.__call__(...) <==> x(...)
p376
sssg168
(dp377
g5
g59
sg7
(dp378
g9
((dp379
g16
(g17
g24
tp380
sg20
(lp381
(dp382
g23
(g17
g18
tp383
sg26
g176
sastp384
sg10
V__repr__(self: object) -> str\u000a
p385
sssg52
(dp386
g5
g39
sg7
(dp387
g23
(g17
g55
tp388
ssssg82
(lp389
(g41
g343
tp390
a(g17
g18
tp391
asg10
VArgChecker(prms: Array[object])\u000a
p392
sg95
(lp393
(g17
g18
tp394
asssVRuntimeArgChecker
p395
(dp396
g5
g23
sg7
(dp397
g50
(dp398
g122
(dp399
g5
g6
sg7
(dp400
g9
((dp401
g16
(g17
g18
tp402
sg20
(lp403
(dp404
g23
(g17
g129
tp405
sg26
g131
sa(dp406
g133
g134
sg23
(g17
g135
tp407
sg26
g137
sas(dp408
g16
(g17
g18
tp409
sg20
(lp410
(dp411
g23
(g17
g129
tp412
sg26
g143
sa(dp413
g133
g145
sg23
(g17
g146
tp414
sg26
g148
sa(dp415
g133
g134
sg23
(g17
g135
tp416
sg26
g151
sas(dp417
g16
(g17
g18
tp418
sg20
(lp419
(dp420
g23
(g17
g129
tp421
sg26
g157
sa(dp422
g133
g145
sg23
(g17
g146
tp423
sg26
g160
sastp424
sg10
V__new__(cls: type, function: object, expectedArgs: Array[object])\u000a__new__(cls: type, instance: object, function: object, expectedArgs: Array[object])\u000a
p425
sssg295
(dp426
g5
g59
sg7
(dp427
g9
(tsg10
Vx.__call__(...) <==> x(...)x.__call__(...) <==> x(...)
p428
sssg52
(dp429
g5
g39
sg7
(dp430
g23
(g17
g55
tp431
ssssg82
(lp432
(g41
g395
tp433
a(g17
g304
tp434
a(g17
g18
tp435
asg10
VRuntimeArgChecker(function: object, expectedArgs: Array[object])\u000aRuntimeArgChecker(instance: object, function: object, expectedArgs: Array[object])\u000a
p436
sg95
(lp437
(g17
g304
tp438
asssVSelf
p439
(dp440
g5
g6
sg7
(dp441
g9
((dp442
g16
(g17
g18
tp443
sg20
(lp444
stp445
sg10
VSelf() -> object\u000a
p446
sssVSerialize
p447
(dp448
g5
g6
sg7
(dp449
g9
((dp450
g16
(g17
g135
tp451
sg20
(lp452
(dp453
g23
(g17
g18
tp454
sg26
Vself
p455
sastp456
sg10
VSerialize(self: object) -> tuple\u000a
p457
sssVUse
p458
(dp459
g5
g6
sg7
(dp460
g9
((dp461
g16
(g17
g18
tp462
sg20
(lp463
(dp464
g23
(g17
g24
tp465
sg26
Vname
p466
sas(dp467
g16
(g17
g18
tp468
sg20
(lp469
(dp470
g23
(g17
g24
tp471
sg26
Vpath
p472
sa(dp473
g23
(g17
g24
tp474
sg26
Vlanguage
p475
sastp476
sg10
VUse(name: str) -> object\u000aUse(path: str, language: str) -> object\u000a
p477
sssVImportExtensions
p478
(dp479
g5
g6
sg7
(dp480
g9
((dp481
g16
(g17
g102
tp482
sg20
(lp483
(dp484
g23
(g17
g129
tp485
sg26
Vtype
p486
sas(dp487
g16
(g17
g102
tp488
sg20
(lp489
(dp490
g23
(g17
Vnamespace#
p491
tp492
sg26
Vnamespace
p493
sastp494
sg10
VImportExtensions(type: type)ImportExtensions(namespace: namespace#)
p495
sssVEnableProfiler
p496
(dp497
g5
g6
sg7
(dp498
g9
((dp499
g16
(g17
g102
tp500
sg20
(lp501
(dp502
g23
(g17
Vbool
p503
tp504
sg26
Venable
p505
sastp506
sg10
VEnableProfiler(enable: bool)
p507
sssV__package__
p508
(dp509
g5
g39
sg7
(dp510
g23
(g17
g102
tp511
sssVGetSubclassedTypes
p512
(dp513
g5
g6
sg7
(dp514
g9
((dp515
g16
(g17
g135
tp516
sg20
(lp517
stp518
sg10
VGetSubclassedTypes() -> tuple\u000a
p519
sssVAddReference
p520
(dp521
g5
g6
sg7
(dp522
g9
((dp523
g16
(g17
g102
tp524
sg20
(lp525
(dp526
g133
g134
sg23
(g17
g135
tp527
sg26
Vreferences
p528
sastp529
sg10
VAdds a reference to a .NET assembly.  Parameters can be an already loaded\u000aAssembly object, a full assembly name, or a partial assembly name. After the\u000aload the assemblies namespaces and top-level types will be available via \u000aimport Namespace.
p530
sssVLoadTypeLibrary
p531
(dp532
g5
g6
sg7
(dp533
g9
(tsg10
VLoadTypeLibrary(rcw: object) -> ComTypeLibInfo\u000aLoadTypeLibrary(typeLibGuid: Guid) -> ComTypeLibInfo\u000a
p534
sssVGetProfilerData
p535
(dp536
g5
g6
sg7
(dp537
g9
((dp538
g16
(g17
g135
tp539
sg20
(lp540
(dp541
g23
(g17
g503
tp542
sg26
VincludeUnused
p543
sVdefault_value
p544
VFalse
p545
sastp546
sg10
VGetProfilerData(includeUnused: bool) -> tuple\u000a
p547
sssVCompileSubclassTypes
p548
(dp549
g5
g6
sg7
(dp550
g9
((dp551
g16
(g17
g102
tp552
sg20
(lp553
(dp554
g23
(g17
g24
tp555
sg26
VassemblyName
p556
sa(dp557
g133
g134
sg23
(g17
g135
tp558
sg26
VnewTypes
p559
sastp560
sg10
VCompileSubclassTypes(assemblyName: str, *newTypes: Array[object])
p561
sssVDirClr
p562
(dp563
g5
g6
sg7
(dp564
g9
((dp565
g16
(g17
g248
tp566
sg20
(lp567
(dp568
g23
(g17
g18
tp569
sg26
Vo
p570
sastp571
sg10
VDirClr(o: object) -> list\u000a
p572
sssVConvert
p573
(dp574
g5
g6
sg7
(dp575
g9
(tsg10
VConvert(o: object, toType: Type) -> object\u000a
p576
sssVLoadAssemblyFromFileWithPath
p577
(dp578
g5
g6
sg7
(dp579
g9
(tsg10
VAdds a reference to a .NET assembly.  Parameters are a full path to an. \u000aassembly on disk. After the load the assemblies namespaces and top-level types \u000awill be available via import Namespace.
p580
sssVClearProfilerData
p581
(dp582
g5
g6
sg7
(dp583
g9
((dp584
g16
(g17
g102
tp585
sg20
(lp586
stp587
sg10
VClearProfilerData()
p588
sssVReturnChecker
p589
(dp590
g5
g23
sg7
(dp591
g50
(dp592
g52
(dp593
g5
g39
sg7
(dp594
g23
(g17
g55
tp595
sssg295
(dp596
g5
g59
sg7
(dp597
g9
(tsg10
Vx.__call__(...) <==> x(...)
p598
sssg168
(dp599
g5
g59
sg7
(dp600
g9
((dp601
g16
(g17
g24
tp602
sg20
(lp603
(dp604
g23
(g17
g18
tp605
sg26
g176
sastp606
sg10
V__repr__(self: object) -> str\u000a
p607
sssg122
(dp608
g5
g6
sg7
(dp609
g9
((dp610
g16
(g17
g18
tp611
sg20
(lp612
(dp613
g23
(g17
g129
tp614
sg26
g131
sa(dp615
g133
g134
sg23
(g17
g135
tp616
sg26
g137
sas(dp617
g16
(g17
g18
tp618
sg20
(lp619
(dp620
g23
(g17
g129
tp621
sg26
g143
sa(dp622
g133
g145
sg23
(g17
g146
tp623
sg26
g148
sa(dp624
g133
g134
sg23
(g17
g135
tp625
sg26
g151
sas(dp626
g16
(g17
g18
tp627
sg20
(lp628
(dp629
g23
(g17
g129
tp630
sg26
g157
sa(dp631
g133
g145
sg23
(g17
g146
tp632
sg26
g160
sastp633
sg10
V__new__(cls: type, returnType: object)\u000a
p634
sssVretType
p635
(dp636
g5
g39
sg7
(dp637
g23
(g17
g166
tp638
ssssg82
(lp639
(g41
g589
tp640
a(g17
g18
tp641
asg10
VReturnChecker(returnType: object)\u000a
p642
sg95
(lp643
(g17
g18
tp644
asssVGetClrType
p645
(dp646
g5
g6
sg7
(dp647
g9
(tsg10
VGetClrType(type: Type) -> Type\u000a
p648
sssV__name__
p649
(dp650
g5
g39
sg7
(dp651
g23
(g17
g24
tp652
sssVAddReferenceByName
p653
(dp654
g5
g6
sg7
(dp655
g9
((dp656
g16
(g17
g102
tp657
sg20
(lp658
(dp659
g133
g134
sg23
(g17
g135
tp660
sg26
Vnames
p661
sastp662
sg10
VAdds a reference to a .NET assembly.  Parameters are an assembly name. \u000aAfter the load the assemblies namespaces and top-level types will be available via \u000aimport Namespace.
p663
sssVAddReferenceToFileAndPath
p664
(dp665
g5
g6
sg7
(dp666
g9
((dp667
g16
(g17
g102
tp668
sg20
(lp669
(dp670
g133
g134
sg23
(g17
g135
tp671
sg26
Vfiles
p672
sastp673
sg10
VAdds a reference to a .NET assembly.  One or more assembly names can\u000abe provided which are fully qualified names to the file on disk.  The \u000adirectory is added to sys.path and AddReferenceToFile is then called. After the \u000aload the assemblies namespaces and top-level types will be available via \u000aimport Namespace.
p674
sssVGetDynamicType
p675
(dp676
g5
g6
sg7
(dp677
g9
(tsg10
VGetDynamicType(t: Type) -> type\u000a
p678
sssVAddReferenceToFile
p679
(dp680
g5
g6
sg7
(dp681
g9
((dp682
g16
(g17
g102
tp683
sg20
(lp684
(dp685
g133
g134
sg23
(g17
g135
tp686
sg26
Vfiles
p687
sastp688
sg10
VAdds a reference to a .NET assembly.  One or more assembly names can\u000abe provided.  The assembly is searched for in the directories specified in \u000asys.path and dependencies will be loaded from sys.path as well.  The assembly \u000aname should be the filename on disk without a directory specifier and \u000aoptionally including the .EXE or .DLL extension. After the load the assemblies \u000anamespaces and top-level types will be available via import Namespace.
p689
sssVGetPythonType
p690
(dp691
g5
g6
sg7
(dp692
g9
(tsg10
VGetPythonType(t: Type) -> type\u000a
p693
ssssVdoc
p694
Vmodule()\u000a
p695
s.
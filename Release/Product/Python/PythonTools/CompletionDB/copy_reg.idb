(dp0
Vmembers
p1
(dp2
Vpickle_complex
p3
(dp4
Vkind
p5
Vfunction
p6
sVvalue
p7
(dp8
Voverloads
p9
((dp10
Vret_type
p11
(V__builtin__
p12
Vtuple
p13
tp14
sVargs
p15
(lp16
(dp17
Vtype
p18
(g12
Vobject
p19
tp20
sVname
p21
Vcomplex
p22
sastp23
sVdoc
p24
Vpickle_complex(complex_number) -> (<type 'complex'>, (real, imag))\u000a\u000aReduction function for pickling complex numbers.
p25
sssV_extension_registry
p26
(dp27
g5
Vdata
p28
sg7
(dp29
g18
(g12
Vdict
p30
tp31
sssV__package__
p32
(dp33
g5
g28
sg7
(dp34
g18
(g12
VNoneType
p35
tp36
sssVpickle
p37
(dp38
g5
g6
sg7
(dp39
g9
((dp40
g11
(g12
g35
tp41
sg15
(lp42
(dp43
g18
(g12
g19
tp44
sg21
Vtype
p45
sa(dp46
g18
(g12
g19
tp47
sg21
Vfunction
p48
sa(dp49
g18
(g12
g19
tp50
sg21
Vctor
p51
sVdefault_value
p52
VNone
p53
sastp54
sg24
Vpickle(type, function[, constructor]) -> None\u000a\u000aAssociate function with type, indicating that function should be used to\u000a"reduce" objects of the given type when pickling. function should behave as\u000aspecified by the "Extended __reduce__ API" section of PEP 307.\u000a\u000aReduction functions registered by calling pickle() can be retrieved later\u000athrough copy_reg.dispatch_table[type].\u000a\u000aNote that calling pickle() will overwrite any previous association for the\u000agiven type.\u000a\u000aThe constructor argument is ignored, and exists only for backwards\u000acompatibility.
p55
sssVconstructor
p56
(dp57
g5
g6
sg7
(dp58
g9
((dp59
g11
(g12
g35
tp60
sg15
(lp61
(dp62
g18
(g12
g19
tp63
sg21
Vcallable
p64
sastp65
sg24
Vconstructor(object) -> None\u000a\u000aRaise TypeError if object isn't callable. This function exists only for\u000abackwards compatibility; for details, see\u000ahttp://mail.python.org/pipermail/python-dev/2006-June/066831.html.
p66
sssVdispatch_table
p67
(dp68
g5
g28
sg7
(dp69
g18
(g12
g30
tp70
sssV__name__
p71
(dp72
g5
g28
sg7
(dp73
g18
(g12
Vstr
p74
tp75
sssV_inverted_registry
p76
(dp77
g5
g28
sg7
(dp78
g18
(g12
g30
tp79
sssV__newobj__
p80
(dp81
g5
g6
sg7
(dp82
g9
((dp83
g11
(g12
g19
tp84
sg15
(lp85
(dp86
g18
(g12
g19
tp87
sg21
Vcls
p88
sa(dp89
Varg_format
p90
V*
p91
sg18
(g12
g13
tp92
sg21
Vargs
p93
sastp94
sg24
V__newobj__(cls, *args) -> cls.__new__(cls, *args)\u000a\u000aHelper function for unpickling. Creates a new object of a given class.\u000aSee PEP 307 section "The __newobj__ unpickling function" for details.
p95
sssV_extension_cache
p96
(dp97
g5
g28
sg7
(dp98
g18
(g12
g30
tp99
sssVclear_extension_cache
p100
(dp101
g5
g6
sg7
(dp102
g9
((dp103
g11
(g12
g35
tp104
sg15
(lp105
stp106
sg24
Vclear_extension_cache()
p107
sssVadd_extension
p108
(dp109
g5
g6
sg7
(dp110
g9
((dp111
g11
(g12
g35
tp112
sg15
(lp113
(dp114
g18
(g12
g19
tp115
sg21
VmoduleName
p116
sa(dp117
g18
(g12
g19
tp118
sg21
VobjectName
p119
sa(dp120
g18
(g12
g19
tp121
sg21
Vvalue
p122
sastp123
sg24
VRegister an extension code.
p124
sssV_reconstructor
p125
(dp126
g5
g6
sg7
(dp127
g9
((dp128
g11
(g12
g19
tp129
sg15
(lp130
(dp131
g18
(g12
g19
tp132
sg21
VobjType
p133
sa(dp134
g18
(g12
g19
tp135
sg21
VbaseType
p136
sa(dp137
g18
(g12
g19
tp138
sg21
VbaseState
p139
sastp140
sg24
V_reconstructor(basetype, objtype, basestate) -> object\u000a\u000aHelper function for unpickling. Creates and initializes a new object of a given\u000aclass. See PEP 307 section "Case 2: pickling new-style class instances using\u000aprotocols 0 or 1" for details.
p141
sssVremove_extension
p142
(dp143
g5
g6
sg7
(dp144
g9
((dp145
g11
(g12
g35
tp146
sg15
(lp147
(dp148
g18
(g12
g19
tp149
sg21
VmoduleName
p150
sa(dp151
g18
(g12
g19
tp152
sg21
VobjectName
p153
sa(dp154
g18
(g12
g19
tp155
sg21
Vvalue
p156
sastp157
sg24
VUnregister an extension code. (only for testing)
p158
ssssg24
Vmodule()\u000a
p159
s.
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Choose>
    <When Condition="'$(Language)' == 'C#' and !$(SuppressCommonAssemblyMetadata)">
      <PropertyGroup>
        <TrackFileAccess>false</TrackFileAccess>            <!-- CHECK RELEVANCE -->
      </PropertyGroup>
      <ItemGroup>
        <Compile Include="$(BuildRoot)\Python\Product\AssemblyInfoCommon.cs">
          <Link>AssemblyInfoCommon.cs</Link>
        </Compile>
        <Compile Include="$(BuildRoot)\Python\Product\AssemblyVersion.cs">
          <Link>AssemblyVersion.cs</Link>
        </Compile>
      </ItemGroup>
      <PropertyGroup>
        <TrackFileAccess>true</TrackFileAccess>             <!-- CHECK RELEVANCE -->
      </PropertyGroup>
    </When>
  </Choose>
  <Import Project="$(BuildRoot)\Build\Common.Build.targets" />
    <!--
    =================================================================================
      Transforms our ConditionalEmbeddedResource into EmbeddedResource item groups by
      doing a search/replace in the .resx file and writing out a new file.
      
      Currently the search and replace just updates the VS target version
    =================================================================================
    -->

  <Target Name="ConditionalResx"
          BeforeTargets="MainResourcesGeneration"
          Condition="'@(ConditionalEmbeddedResource)' != ''"
          >
    
          
    <WriteLinesToFile 
      File="@(ConditionalEmbeddedResource->'%(RootDir)%(Directory)%(Filename).xform.resx')" 
      Lines="$([System.IO.File]::ReadAllText('%(fullpath)').Replace(&quot;_VSVERSION_&quot;,&quot;$(VSTarget)&quot;))" 
      Overwrite="true"/> 
      
    <ItemGroup>
      <EmbeddedResource Include="@(ConditionalEmbeddedResource->'%(RootDir)%(Directory)%(Filename).xform.resx')">
        <ManifestResourceName>%(ConditionalEmbeddedResource.ManifestResourceName)</ManifestResourceName>
        <MergeWithCTO Condition="'%(ConditionalEmbeddedResource.MergeWithCTO)' != ''">%(ConditionalEmbeddedResource.MergeWithCTO)</MergeWithCTO>
        <LastGenOutput Condition="'%(ConditionalEmbeddedResource.LastGenOutput)' != ''">%(ConditionalEmbeddedResource.LastGenOutput)</LastGenOutput>
        <Generator Condition="'%(ConditionalEmbeddedResource.Generator)' != ''">%(ConditionalEmbeddedResource.Generator)</Generator>
      </EmbeddedResource>
    </ItemGroup>
  </Target>

  <Target Name="TransformZipProject"
          BeforeTargets="MainResourcesGeneration"
          Condition="'@(TransformedZipProject)' != ''"
          >
    <WriteLinesToFile 
      File="@(TransformedZipProject->'%(RootDir)%(Directory)%(Filename)')" 
      Lines="$([System.IO.File]::ReadAllText('%(fullpath)').Replace(&quot;_VSVERSION_&quot;,&quot;$(VSTarget)&quot;))" 
      Overwrite="true"/> 
      
    <ItemGroup>
      <ZipProject Include="@(TransformedZipProject->'%(RootDir)%(Directory)%(Filename)')" />
    </ItemGroup>
  </Target>


  <!-- If this package is building a VSIX and InstalledByMsi property is set to False, edit
       the intermediate manifest to reflect that. -->
  <PropertyGroup>
    <InstalledByMsi Condition="'$(InstalledByMsi)' == ''">True</InstalledByMsi>
    <VsixManifestSchemaNamespaces><![CDATA[
        <Namespace Prefix="vsx10" Uri="http://schemas.microsoft.com/developer/vsx-schema/2010"/>
        <Namespace Prefix="vsx11" Uri="http://schemas.microsoft.com/developer/vsx-schema/2011"/>
    ]]></VsixManifestSchemaNamespaces>
  </PropertyGroup>
  <Target Name="EditIntermediateVsixManifest" AfterTargets="DetokenizeVsixManifestFile"
          Condition="!$(InstalledByMsi)">
    <XmlPoke XmlInputPath="$(IntermediateVsixManifest)"
             Namespaces="$(VsixManifestSchemaNamespaces)"
             Query="/vsx10:Vsix/vsx10:Identifier/vsx10:InstalledByMsi" 
             Value="false" />
    <XmlPoke XmlInputPath="$(IntermediateVsixManifest)"
             Namespaces="$(VsixManifestSchemaNamespaces)"
             Query="/vsx11:PackageManifest/vsx11:Installation/@InstalledByMsi" 
             Value="false" />
  </Target>

</Project>
